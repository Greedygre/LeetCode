/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func constructMaximumBinaryTree(nums []int) *TreeNode {
  return buildTree(nums,0,len(nums)-1)
}
func buildTree(nums []int,start int,end int) *TreeNode {
	if start > end {
		return nil
	}
	maxIndex := maxIndex(nums,start,end)
	root := new(TreeNode)
    root.Val = nums[maxIndex]
	root.Left = buildTree(nums,start,maxIndex-1)
	root.Right = buildTree(nums,maxIndex+1,end)
	return root
}
func maxIndex(arr []int,start int,end int) int {
	maxIndex := start
	for i:=start;i<=end;i++ {
		if arr[i] > arr[maxIndex] {
			maxIndex = i
		}
	}
	return maxIndex
}